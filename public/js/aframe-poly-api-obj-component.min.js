!function(e){function t(r){if(o[r])return o[r].exports;var a=o[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("poly-api-obj",{schema:{mtl:{type:"model"},obj:{type:"model"}},init:function(){this.model=null,this.objLoader=new THREE.OBJLoader,this.mtlLoader=new THREE.MTLLoader(this.objLoader.manager),this.mtlLoader.crossOrigin=""},update:function(){var e=this.data;e.obj&&(this.remove(),this.loadObj(e.obj,e.mtl))},remove:function(){this.model&&this.el.removeObject3D("mesh")},loadObj:function(e,t){var o=this,r=this.el,a=this.mtlLoader,i=this.objLoader;return t?(r.hasAttribute("material")&&warn("Material component properties are ignored when a .MTL is provided"),a.setTexturePath(t.substr(0,t.lastIndexOf("/")+1)),void a.load(t,function(t){t.preload(),i.setMaterials(t),i.load(e,function(e){o.addObject(e)})})):void i.load(e,function(e){var t=r.components.material;t&&e.traverse(function(e){e instanceof THREE.Mesh&&(e.material=t.material)}),o.addObject(e)})},addObject:function(e){var t=this.el;this.model=e;var o=new THREE.Box3;o.setFromObject(e);var r=o.getCenter();r.y=o.min.y,e.position.sub(r);var a=new THREE.Group;a.add(e),a.scale.setScalar(5/o.getSize().length()),t.setObject3D("mesh",a),t.emit("model-loaded",{format:"obj",model:e})}})}]);